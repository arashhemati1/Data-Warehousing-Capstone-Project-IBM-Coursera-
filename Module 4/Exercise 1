#!/bin/sh

# Step 1: Extract data from the sales_data table in MySQL that is not more than 4 hours old and save it to sales.csv.
# Replace <your_password> and <your_database> with actual values.
mysql -h mysql -P 3306 -u root --password=<your_password> --database=<your_database> \
--execute="SELECT * FROM sales_data WHERE timestamp >= NOW() - INTERVAL 4 HOUR" --batch --silent > /home/project/sales.csv

# Step 2: Replace all tabs in the CSV with commas to format it correctly for loading into PostgreSQL.
tr '\t' ',' < /home/project/sales.csv > /home/project/temp_sales_commas.csv

# Step 3: Move the comma-separated temporary file to replace the original sales.csv.
mv /home/project/temp_sales_commas.csv /home/project/sales.csv

# Step 4: Load the cleaned sales.csv into the sales_data table in PostgreSQL.
# Replace <your_postgres_password> with your actual PostgreSQL password.
export PGPASSWORD=<your_postgres_password>
psql --username=postgres --host=localhost --dbname=sales_new \
-c "\COPY sales_data(rowid, product_id, customer_id, price, quantity, timestamp) FROM '/home/project/sales.csv' DELIMITER ',' CSV HEADER;"

# Step 5: Create DimDate table if it does not exist.
psql --username=postgres --host=localhost --dbname=sales_new \
-c "CREATE TABLE IF NOT EXISTS DimDate (
        date_key INT PRIMARY KEY, 
        full_date DATE, 
        year INT, 
        quarter VARCHAR(2), 
        month INT, 
        day INT
    );"

# Step 6: Load data into the DimDate table from the sales_data table.
psql --username=postgres --host=localhost --dbname=sales_new \
-c "INSERT INTO DimDate (date_key, full_date, year, quarter, month, day)
    SELECT DISTINCT
        TO_CHAR(timestamp, 'YYYYMMDD')::INT AS date_key,
        timestamp::DATE AS full_date,
        EXTRACT(YEAR FROM timestamp) AS year,
        'Q' || EXTRACT(QUARTER FROM timestamp) AS quarter,
        EXTRACT(MONTH FROM timestamp) AS month,
        EXTRACT(DAY FROM timestamp) AS day
    FROM sales_data;"

# Step 7: Create FactSales table if it does not exist.
psql --username=postgres --host=localhost --dbname=sales_new \
-c "CREATE TABLE IF NOT EXISTS FactSales (
        sales_key INT PRIMARY KEY, 
        date_key INT, 
        product_id INT, 
        customer_id INT, 
        price DECIMAL(10, 2), 
        quantity INT, 
        total_amount DECIMAL(10, 2)
    );"

# Step 8: Load data into the FactSales table from the sales_data table.
psql --username=postgres --host=localhost --dbname=sales_new \
-c "INSERT INTO FactSales (sales_key, date_key, product_id, customer_id, price, quantity, total_amount)
    SELECT 
        rowid AS sales_key,
        TO_CHAR(timestamp, 'YYYYMMDD')::INT AS date_key,
        product_id,
        customer_id,
        price,
        quantity,
        price * quantity AS total_amount
    FROM sales_data;"

# Step 9: Export DimDate table to a CSV file.
psql --username=postgres --host=localhost --dbname=sales_new \
-c "\COPY DimDate TO '/home/project/DimDate.csv' DELIMITER ',' CSV HEADER;"

# Step 10: Export FactSales table to a CSV file.
psql --username=postgres --host=localhost --dbname=sales_new \
-c "\COPY FactSales TO '/home/project/FactSales.csv' DELIMITER ',' CSV HEADER;"

# Step 11: Clean up by removing the sales.csv file after exporting data.
rm /home/project/sales.csv
